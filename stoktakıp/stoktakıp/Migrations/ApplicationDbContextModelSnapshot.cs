// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using stoktakıp.Data;

#nullable disable

namespace stoktakıp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("stoktakıp.Models.Cihaz", b =>
                {
                    b.Property<int>("CihazId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CihazId"));

                    b.Property<string>("CihazAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Marka")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MevcutStok")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SeriNumarasi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ToplamAdet")
                        .HasColumnType("int");

                    b.HasKey("CihazId");

                    b.HasIndex("SeriNumarasi")
                        .IsUnique();

                    b.ToTable("Cihazlar");

                    b.HasData(
                        new
                        {
                            CihazId = 1,
                            CihazAdi = "Laptop",
                            KayitTarihi = new DateTime(2025, 10, 20, 14, 3, 48, 112, DateTimeKind.Local).AddTicks(2720),
                            Marka = "Dell",
                            MevcutStok = 10,
                            Model = "Latitude 5420",
                            SeriNumarasi = "DELL-LAT-001",
                            ToplamAdet = 10
                        },
                        new
                        {
                            CihazId = 2,
                            CihazAdi = "Mouse",
                            KayitTarihi = new DateTime(2025, 10, 20, 14, 3, 48, 112, DateTimeKind.Local).AddTicks(2723),
                            Marka = "Logitech",
                            MevcutStok = 20,
                            Model = "M185",
                            SeriNumarasi = "LOG-M185-001",
                            ToplamAdet = 20
                        },
                        new
                        {
                            CihazId = 3,
                            CihazAdi = "Klavye",
                            KayitTarihi = new DateTime(2025, 10, 20, 14, 3, 48, 112, DateTimeKind.Local).AddTicks(2725),
                            Marka = "Logitech",
                            MevcutStok = 15,
                            Model = "K120",
                            SeriNumarasi = "LOG-K120-001",
                            ToplamAdet = 15
                        });
                });

            modelBuilder.Entity("stoktakıp.Models.TeslimIslemi", b =>
                {
                    b.Property<int>("IslemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IslemId"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<int>("CihazId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IadeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("IslemTipi")
                        .HasColumnType("int");

                    b.Property<string>("TeslimAlan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TeslimEden")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("TeslimTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("IslemId");

                    b.HasIndex("CihazId");

                    b.ToTable("TeslimIslemleri");
                });

            modelBuilder.Entity("stoktakıp.Models.TeslimIslemi", b =>
                {
                    b.HasOne("stoktakıp.Models.Cihaz", "Cihaz")
                        .WithMany("TeslimIslemleri")
                        .HasForeignKey("CihazId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cihaz");
                });

            modelBuilder.Entity("stoktakıp.Models.Cihaz", b =>
                {
                    b.Navigation("TeslimIslemleri");
                });
#pragma warning restore 612, 618
        }
    }
}
